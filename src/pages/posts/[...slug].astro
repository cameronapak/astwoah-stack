---
import { db, Posts, eq } from "astro:db";
import { Icon } from "astro-iconify";

import Layout from "@/layouts/Layout.astro";
import ShowIfAuthenticated from "@/components/ShowIfAuthenticated.astro";
import Footer from "@sections/Footer.astro";
import Navbar from "@sections/Navbar.astro";
import Container from "@sections/Container.astro";
import RenderMarkdown from "@/components/RenderMarkdown.astro";

const { slug } = Astro.params;

if (!slug) {
  return Astro.redirect("/posts");
}

const entry = await db.select().from(Posts).where(eq(Posts.slug, slug)).get();

if (!entry) {
  return Astro.redirect("/posts");
}

// The browser should always check freshness
Astro.response.headers.set("cache-control", "public, max-age=0, must-revalidate");

// The CDN should cache for a year, but revalidate if the cache tag changes
Astro.response.headers.set("netlify-cdn-cache-control", "s-maxage=31536000");

// Tag the page with the project slug
Astro.response.headers.set("netlify-cache-tag", `post-${slug}`);
---

<Layout title={entry?.title || ""}>
  <Navbar
    title="Freedom Stack"
    links={[
      { text: "Blog", href: "/posts" },
      { text: "Sign In", href: "/sign-in" }
    ]}
  />

  <Container
    title={entry?.title || ""}
    align="center"
    titleIsH1={true}
    subtitle={` Posted on ${new Date(entry?.pubDate).toLocaleDateString("en-US", { month: "long", year: "numeric" })} by ${
      entry?.author
    }`}
  >
    <article>
      <RenderMarkdown content={entry?.content || ""} />
      <ShowIfAuthenticated server:defer>
        <a class="btn btn-sm mt-4" href={`/dashboard/posts/edit/${slug}`}>
          <Icon pack="lucide" name="pencil" height={16} width={16} />
          Edit Post
        </a>
      </ShowIfAuthenticated>
    </article>
  </Container>

  <Footer
    links={[
      {
        title: "Resources",
        items: [
          { text: "Code on GitHub", href: "https://github.com/cameronapak/freedom-stack" },
          { text: "Buy Me a Coffee", href: "https://buymeacoffee.com/campak" },
          { text: "Contact Cam", href: "https://cameronpak.com/pages/contact-cam" }
        ]
      },
      {
        title: "Legal",
        items: [
          { text: "Code of Conduct", href: "https://github.com/cameronapak/freedom-stack?tab=coc-ov-file#readme" },
          { text: "MIT License", href: "https://github.com/cameronapak/freedom-stack?tab=mit-1-ov-file#readme" }
        ]
      }
    ]}
  />
</Layout>
