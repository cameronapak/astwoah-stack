---
import Layout from "@/layouts/Layout.astro";
import Hero from "@sections/Hero.astro";
import HalfTextHalfImage from "@sections/HalfTextHalfImage.astro";
import Quote from "@sections/Quote.astro";
import Navbar from "@sections/Navbar.astro";
import Footer from "@sections/Footer.astro";
import Features from "@sections/Features/index.astro";
import Container from "@sections/Container.astro";
import FAQ from "@sections/FAQ.astro";
import RenderMarkdown from "@/components/RenderMarkdown.astro";
import sectionsImage from "@/assets/sections.png";
import deployToNetlifyImage from "@/assets/deploy.png";
import fullStackImage from "@/assets/full-stack.png";

const features = [
  { title: "Astro", description: "The simplest web metaframework" },
  { title: "Alpine.js", description: "Used for client-side interactivity" },
  { title: "HTMX", description: "Used for sending HTML partials over the wire" },
  { title: "daisyUI", description: "Easy as Bootstrap; built upon Tailwind" },
  { title: "Clerk Auth", description: "The simplest authentication solution" },
  { title: "Astro DB", description: "An approachable database solution" }
];

const faqItems = [
  {
    question: "What is Freedom Stack?",
    answer: "Freedom Stack is a full-stack Astro starter kit that feels freeing and is free."
  },
  {
    question: "How can I learn more about Astro?",
    answer:
      "If you want to learn more about the frontend layer, I recommend the [Astro Web Framework Crash Course by freeCodeCamp](https://www.youtube.com/watch?v=e-hTm5VmofI) or check out [Astro's Community Educational Content](https://docs.astro.build/en/community-resources/content/)."
  },
  {
    question: "How can I learn more about Alpine.js?",
    answer:
      "If you want to learn more about Alpine.js, I recommend [Learn Alpine.js on codecourse](https://codecourse.com/courses/learn-alpine-js)."
  },
  {
    question: "How can I learn more about the libSQL database layer?",
    answer:
      "If you want to learn more about the database layer, I recommend learning from [High Performance SQLite course](https://highperformancesqlite.com/), sponsored by [Turso](https://turso.tech/)."
  },
  {
    question: "How can I learn more about Clerk Auth?",
    answer: "[Learn more about the Clerk and Astro integration.](https://clerk.com/docs/references/astro/overview)"
  },
  {
    question: "How do I deploy Freedom Stack?",
    answer:
      "You can deploy Freedom Stack to [Netlify](https://app.netlify.com/start/deploy?repository=https://github.com/cameronapak/freedom-stack)."
  },
  {
    question: "How can I learn more about HTMX?",
    answer: "[Learn more about HTMX.](https://htmx.org/)"
  },
  {
    question: "How can I learn more about daisyUI?",
    answer: "[Learn more about daisyUI.](https://daisyui.com/)"
  },
  {
    question: "How can I contribute to Freedom Stack?",
    answer:
      "If you'd like to contribute to Freedom Stack, please [open an issue](https://github.com/cameronapak/freedom-stack/issues) or [submit a pull request](https://github.com/cameronapak/freedom-stack/pulls). Or, if you can submit financially, please consider [buying me a coffee](https://buymeacoffee.com/campak)."
  }
];

const letterContentMarkdown = `
  I dream of a lightweight, simple web development stack that invokes a fun web experience at the cheapest possible
  maintenance, backend, and server cost. As close to free as possible. I wanted to provide a stack that's powerful
  like Ruby on Rails _("The One Person Framework")_, but with the ease and "vanilla" web dev feel of Astro. Freedom
  Stack is built on three core principles:

  - **Approachable** — Making web development feel natural and comfortable, especially for newcomers
  - **Flow-able** — Using an HTML-first approach that helps you focus and get in the zone faster
  - **Pocket-friendly** — Keeping it financially maintainable for everyone, from indie hackers to startups

  This is only the beginning. It's a joy to work on this project and to give it freely. Long story short, I was
  bed-ridden sick for about 7 months, not knowing if I'd make it out. [God](https://www.gotquestions.org/what-is-the-gospel.html)
  took care of me through friends and family. He healed me on the inside before he healed me on the outside. Ever
  since, I've had a deep desire to create digital experiences that lead to freedom. May Freedom Stack be a blessing
  to you to create whatever dreams and visions on your heart and mind.

  Freedom Stack:

  - Feels vanilla, with the power of modern frameworks. No need for Docker. Just throw it on Netlify and you're good to go.
  - Is built with Astro, Alpine.js, HTMX, Astro DB, Clerk Auth, Preline UI, daisyUI, & Lucide Icons. Enjoy building apps.
  - Has a low barrier to entry, making it easy to learn and start building fast. Get in the zone and stay in it.

  _— [Cam Pak](https://cameronpak.com)_
`;

export const prerender = true;

// The browser should always check freshness
Astro.response.headers.set("cache-control", "public, max-age=0, must-revalidate");

// The CDN should cache for a year, but revalidate if the cache tag changes
Astro.response.headers.set("netlify-cdn-cache-control", "s-maxage=31536000");

// Tag the page with the project slug
Astro.response.headers.set("netlify-cache-tag", "components");
---

<Layout
  title="Freedom Stack Boilerplate"
  description="A free full-stack boilerplate that feels freeing. Astro, HTMX, Alpine.js, Astro DB, Clerk Auth, Preline UI, & daisyUI."
>
  <Navbar
    title="Freedom Stack"
    links={[
      { text: "Blog", href: "/posts" },
      { text: "Sign In", href: "/sign-in" }
    ]}
  />
  <Hero
    title="Freedom Stack"
    subtitle="A full-stack Astro starter kit that feels freeing and is free."
    ctaText="Deploy to Netlify"
    ctaHref="https://app.netlify.com/start/deploy?repository=https://github.com/cameronapak/freedom-stack"
    secondaryCtaText="GitHub"
    secondaryCtaHref="https://github.com/cameronapak/freedom-stack"
  />
  {
    /*
      Using HTMX to grab the GitHub stars count without reloading the page.
      Doing this approach versus using server defer for an Astro component is to showcase
      what's possible if you want to update a DOM element without having to mutate the Astro component.
    */
  }
  <div class="hidden" hx-get="/api/htmx-partials/github-stars" hx-trigger="load" hx-swap="innerHTML"></div>
  <HalfTextHalfImage
    title="Create full-stack web apps"
    subtitle="Save time, money, and headaches by using Freedom Stack."
    image={fullStackImage.src}
  />
  <HalfTextHalfImage
    title="No need to reinvent the wheel"
    subtitle="Auth? Database? Components? This starter kit has you covered."
    image={sectionsImage.src}
    reverse
  />
  <HalfTextHalfImage
    title="Focus on the fun stuff"
    subtitle="Enjoy building apps, not configuring servers. Incredibly easy to deploy."
    image={deployToNetlifyImage.src}
  />
  <Quote
    quote="enjoyed learning about Freedom Stack, Cam. Really a refreshing take on SaaS boilerplates ✨ plus I love Astro, too!"
    title="@poppacalypse"
    author="Carl Poppa"
  />
  <Features features={features} />

  <Container title="Why Freedom Stack?" align="center">
    <div class="bg-white p-6 rounded-xl border-2 border-slate-200 w-full text-xl leading-relaxed">
      <RenderMarkdown content={letterContentMarkdown} />
    </div>
  </Container>

  <FAQ title="FAQ" items={faqItems} />

  <Footer
    links={[
      {
        title: "Resources",
        items: [
          { text: "Code on GitHub", href: "https://github.com/cameronapak/freedom-stack" },
          { text: "Buy Me a Coffee", href: "https://buymeacoffee.com/campak" },
          { text: "Contact Cam", href: "https://cameronpak.com/pages/contact-cam" }
        ]
      },
      {
        title: "Legal",
        items: [
          { text: "Code of Conduct", href: "https://github.com/cameronapak/freedom-stack?tab=coc-ov-file#readme" },
          { text: "MIT License", href: "https://github.com/cameronapak/freedom-stack?tab=mit-1-ov-file#readme" }
        ]
      }
    ]}
  />
</Layout>
